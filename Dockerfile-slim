# AlpineLinux with a glibc-2.29-r0 and python3
#ARG ARCH=
ARG ARCH=amd64
FROM --platform=linux/${ARCH} alexberkovich/alpine-anaconda3:0.3.3
ARG ARCH
ENV ARCH=${ARCH}

RUN set -ex && \
   echo $ARCH > /etc/ARCH

COPY python_package_sync_tool_config-${ARCH}.yml /etc/python_package_sync_tool_config.yml

RUN set -ex && \
     #hack to remove because it is distutils installed project
     if [ "$ARCH" = "arm64v8" ]; then rm -fr /opt/anaconda3/lib/python3.8/site-packages/boto*; fi && \
     if [ "$ARCH" = "arm64v8" ]; then rm -fr /opt/anaconda3/lib/python3.8/site-packages/entrypoints*; fi

#uninstall almost all
#see python_package_sync_tool_config.yml for exceptions
#site_packages=$(pip show python_package_sync_tool | grep "Location" |  sed -e 's/Location: //')
RUN set -ex && \
	pip install python_package_sync_tool==0.5.3 && \
	mkdir -p /tmp/reqsync && \
	cp /etc/python_package_sync_tool_config.yml /tmp/reqsync/config.yml && \
	cd /tmp/reqsync/ && \
	pip freeze | sed -e 's/ @ /==/' > installed.txt && \
	python -m alexber.reqsync.data && \
	cp rm.txt /etc/rm.txt  && \
	cd / && \
	rm -fr /tmp/reqsync/ && \
	pip uninstall --yes -r /etc/rm.txt 

RUN set -ex && \
	pip install ruamel_yaml==0.15.100 six==1.15.0 tqdm==4.59.0 requests==2.24.0 requests-toolbelt==0.9.1 \
			certifi==2020.12.5 chardet==3.0.4 idna==2.10 urllib3==1.25.11

											  

#reuse			
#already installed, just for documentatation
RUN set -ex && \
	pip install ruamel_yaml==0.15.100  && \
	conda install sip=4.19.25   && \
	if [ "$ARCH" = "arm64v8" ]; then conda install _openmp_mutex=5.1; fi && \
    conda install conda=4.10.1 python=3.8.8 && \
    pip install Cython==0.29.23 && \
    #--- numpy related part ---
    #restoring numba dependencies, not available in pip (part 1) \
    if [ "$ARCH" = "arm64v8" ]; then insuffix=''; else insuffix='mkl-service=2.3.0 mkl_fft=1.2.0 mkl_random=1.1.1'; fi && \
    conda install blas=1.0 libllvm10=10.0.1 ${insuffix} sip=4.19.25 && \
    #On Arm64 Installation of llvmlite through pip is not supported,
    #see http://llvmlite.pydata.org/en/latest/admin-guide/install.html#using-pip
    #using conda in such case
    #restoring numba dependencies from pip (part 2)
    if [ "$ARCH" = "arm64v8" ]; then conda install llvmlite=0.36.0 ; fi && \
    conda clean -afy && \
    if [ "$ARCH" = "arm64v8" ]; \
             then insuffix=''; else \
             insuffix='mkl==2021.2.0 mkl_fft==1.2.0 mkl_random==1.1.1 intel-openmp==2021.2 \
                       mkl-service==2.3.0 tbb==2021.2.0'; fi && \
    pip install numba==0.53.1 llvmlite==0.36.0 sip==4.19.25 ${insuffix} numpy==1.16.2 && \

	#entrypoints==0.2.3 used in setup.py
	#This version of PyYAML==5.1 works with awscli
	#pyyaml installation from pypi
	pip install entrypoints==0.2.3 pyyaml==5.1 && \
	#twine
	#https://twine.readthedocs.io/en/latest/changelog.html see 3.0.0 changelog
	#Add Python 3.8 support
	#see https://github.com/pypa/twine/pull/518
	pip install twine==3.2.0 pkginfo==1.6.1 colorama==0.4.3 rfc3986==1.4.0 readme-renderer==28.0  \
                                            webencodings==0.5.1 bleach==3.2.1 requests-toolbelt==0.9.1 \
											packaging==20.4 pyparsing==2.4.7 \
															cffi==1.14.5 cryptography==3.4.7 && \
	#pin pyOpenSSL==20.0.1 requests==2.24.0 tqdm==4.59.0
	pip install cffi==1.14.5 cryptography==3.4.7 idna==2.10 pycparser==2.20  pyOpenSSL==20.0.1 \
	            requests==2.24.0 chardet==3.0.4 tqdm==4.59.0  urllib3==1.25.11 toml==0.10.2



RUN set -ex && \
	#numpy installed by numba, remove
	#uninstall mkl to save space (pip install mkl==2019.0 works)
	if [ "$ARCH" = "arm64v8" ]; then suffix='numpy'; else suffix='numpy mkl'; fi && \
	pip uninstall --yes ${suffix} && \
    conda clean -afy

				
RUN set -ex && pip freeze > /etc/installed.txt

#Cleanup
RUN set -ex && rm -rf /var/cache/apk/* /tmp/* /var/tmp/*
#RUN apk del glibc-i18n make gcc musl-dev build-base gfortran
RUN rm -rf /var/cache/apk/*


WORKDIR /
#CMD ["/bin/sh"]
CMD tail -f /dev/null


#docker system prune --all
#docker rmi -f alpine-anaconda3-slim
#docker rm -f conda3-slim-amd64 conda3-slim-arm64v8
#docker build . -t alpine-anaconda3-slim-amd64 --build-arg ARCH=amd64 --file Dockerfile-slim
#docker build . -t alpine-anaconda3-slim-arm64v8 --build-arg ARCH=arm64/v8 --file Dockerfile-slim
#docker run --name conda3-slim-amd64 -d alpine-anaconda3-slim-amd64
#docker run --name conda3-slim-arm64v8 -d alpine-anaconda3-slim-arm64v8
#smoke test
#docker exec -it $(docker ps -q -n=1) pip config list
#docker exec -it $(docker ps -q -n=1) bash
##docker build --squash . -t alpine-anaconda3-slim-amd64 --build-arg ARCH=amd64
##docker build --squash . -t alpine-anaconda3-slim-arm64v8 --build-arg ARCH=arm64v8

#see https://github.com/fabioz/PyDev.Debugger
#docker run --env-file .env.docker --name conda3 -p 54717:54717/tcp -v //C/dev/work/:/opt/project -v //C/Program\ Files/JetBrains/PyCharm\ 2020.1.4/plugins/python/helpers:/opt/.pycharm_helpers -d alpine-anaconda3
##docker exec -it $(docker ps -q -n=1) dbus-run-session bash
#python /opt/.pycharm_helpers/pydev/pydevconsole.py --mode=server --port=54717 #run
#python -u /opt/.pycharm_helpers/pydev/pydevd.py --cmd-line --multiprocess --qt-support=auto --port 54717 --file /opt/project/alpine-anaconda3/keyring_check.py #debug
#runfile('/opt/project/alpine-anaconda3/keyring_check.py', wdir='/opt/project/alpine-anaconda3')


#docker run --name conda3-slim-amd64 -d alpine-anaconda3-slim-amd64
#docker export $(docker ps -q -n=1) | docker import - alpine-anaconda3-slim-amd64-e
#docker run --name conda3-slim-amd64-e -d alpine-anaconda3-slim-amd64-e bash
#populate from docker inspect -f "{{ .Config.Env }}" alpine-anaconda3-slim-amd64
#populate from docker inspect -f "{{ .Config.Cmd }}" alpine-anaconda3-slim-amd64
#based on https://docs.docker.com/engine/reference/commandline/commit/
# docker commit --change "CMD
#   CMD [\"/bin/sh\"]" \
#               --change "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/anaconda3/bin \
#    ARCH=amd64 \
#    PYTHONUNBUFFERED=1 \
#    LANG=C.UTF-8" \
#    $(docker ps -q -n=1) alpine-anaconda3-slim-amd64-ef

#docker run --name conda3-slim-arm64v8 -d alpine-anaconda3-slim-arm64v8
#docker export $(docker ps -q -n=1) | docker import - alpine-anaconda3-slim-arm64v8-e
#docker run --name conda3-slim-arm64v8-e -d alpine-anaconda3-slim-arm64v8-e bash
#populate from docker inspect -f "{{ .Config.Env }}" alpine-anaconda3-slim-arm64v8
#populate from docker inspect -f "{{ .Config.Cmd }}" alpine-anaconda3-slim-arm64v8
#based on https://docs.docker.com/engine/reference/commandline/commit/
# docker commit --change "CMD
#   CMD [\"/bin/sh\"]" \
#               --change "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/anaconda3/bin \
#    ARCH=arm64v8 \
#    PYTHONUNBUFFERED=1 \
#    LANG=C.UTF-8" \
#    $(docker ps -q -n=1) alpine-anaconda3-slim-arm64v8-ef


#docker tag alpine-anaconda3-slim-amd64-ef alexberkovich/alpine-anaconda3:0.3.3-slim-amd64
#docker tag alpine-anaconda3-slim-arm64v8-ef alexberkovich/alpine-anaconda3:0.3.3-slim-arm64v8
#docker push alexberkovich/alpine-anaconda3:0.3.3-slim-amd64
#docker push alexberkovich/alpine-anaconda3:0.3.3-slim-arm64v8
#docker manifest create alexberkovich/alpine-anaconda3:0.3.3-slim --amend alexberkovich/alpine-anaconda3:0.3.3-slim-arm64v8 --amend alexberkovich/alpine-anaconda3:0.3.3-slim-amd64
#docker manifest annotate --arch arm64 --variant v8 alexberkovich/alpine-anaconda3:0.3.3-slim alexberkovich/alpine-anaconda3:0.3.3-slim-arm64v8
#docker manifest annotate --arch amd64 alexberkovich/alpine-anaconda3:0.3.3-slim alexberkovich/alpine-anaconda3:0.3.3-slim-amd64
#docker manifest push --purge alexberkovich/alpine-anaconda3:0.3.3-slim

#docker manifest create alexberkovich/alpine-anaconda3:latest-slim --amend alexberkovich/alpine-anaconda3:0.3.3-slim-arm64v8 --amend alexberkovich/alpine-anaconda3:0.3.3-slim-amd64
#docker manifest annotate --arch arm64 --variant v8 alexberkovich/alpine-anaconda3:0.3.3-latest-slim alexberkovich/alpine-anaconda3:0.3.3-slim-arm64v8
#docker manifest annotate --arch amd64 alexberkovich/alpine-anaconda3:latest-slim alexberkovich/alpine-anaconda3:0.3.3-slim-amd64
#docker manifest push --purge alexberkovich/alpine-anaconda3:latest-slim

# EOF

